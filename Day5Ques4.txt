

public class Main
{
    static int numIslands(char[][] grid) {
    
    boolean[][] visited=new boolean[grid.length][grid[0].length];
     if(grid == null || grid.length == 0) return 0;
    int islands = 0;
     for(int row = 0; row < grid.length; row++){
        for(int col = 0; col < grid[0].length; col++){
            if(!visited[row][col]){
                if( grid[row][col]=='0'){
                    visited[row][col] = true;
                    continue;
                }else{
                    dfs(row, col,grid,visited);
                    islands++;
                }
            }
        }
     }
    return islands;
}
 static void dfs(int row, int col,char[][] grid,boolean[][] visited){
    if(row < 0 || col < 0 || row >= grid.length || col >= grid[0].length || visited[row][col]) return;
    else visited[row][col] = true;
    
    if(grid[row][col] == '0') return;
    
    dfs(row, col -1,grid,visited);    //left
    dfs(row - 1, col,grid,visited);   //up
    dfs(row, col + 1,grid,visited);   //right
    dfs(row + 1, col,grid,visited);   //down
}
	public static void main(String[] args) {
		char grid [][]= {
  {'1','1','1','1','0'},
  {'1','1','0','1','0'},
  {'1','1','0','0','0'},
  {'0','0','0','0','0'}
};
	System.out.println(numIslands(grid));	
	}
}
